<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        6lEKn3/16vbvN2+8tzpnojz2xK4xxX+3dC+L/cef3F1dJxLXKcfFdjflGsOsk3n+hRd651d7rpbu8Rff
        cng/93h/anMyWYDHe1HeiT/RvBwXmey87nWaxijcReZYFO4iUx5lOwAAwKAqH6oGThbvZfmdiTI2fuDz
        rbfe6psovHN8twivjY9cf8vt7bjIvIWXVsdlclycY5xzWSjHnd21OYPm8lU3tGvFtjirt25vr01ZlD/y
        013V+ZF4LsfFnJyfKbfAmeh6Tibla5h32bKB34dIjouUd+Lf/cDW6vjMVMzrXqdpjMJdZI5F4S4ypVG2
        AwAADKPywWpSiTuVozyN4jlL0Zs3bGreeOONvnlk5xPt2LKgvmDp8ur4yJ1btrbjIuMdY8tPHm3HxY+c
        5rmWW9hEgV+bO2jKfcWjsM5jlEV5/DhrbW6kew1yfiafi9TmH0me3LN31D768YXBqC8KDp5bbV4k5ua4
        +NcJMz2ve52mMQp3kTkWhbvI1GTT3pdOOPR/FwEAABhU7QPWkaS8g/yyldc1v/nNb/pm2/ad7dgoXrMI
        jxK4Nj5Szonse/a56rhIHD/Hffu6daPOs1zjBxvuqc4fJHH8XOdLZ3+run5tXuaO+x9sx8UXFuU5luuc
        cu4F1fmTzRNP7Rm1J3r8eGkcryzA41rX5ka6791Mz+tep2mMwl1kjkXhLjI1OfR/FQEAABhG7QPWkSa3
        mFmwdEVvf/V+ufaHt7Yl6jdX3NDbQzz/HkV2bU4kx0QJXXs+819O/4+7zL+y4OLmrt3PjTrH8ouByFnf
        +W7z48d3VNeZKP/9gkvadXL9cu3anEx5DeJfCZTnWK4T51ebP2xiz/Yb79zYXptI/nhpHC++NMjHn/nZ
        /uoakbhWOS4K8MnOK/9FRJxbbU6kO697naYxCneROZbZLtw37XvprEP/EwsAAAAcb2plwZGk/BHMVevW
        N6+++mrfxPMx7svnLmzW73hm1H7et927uTonEkV7jFl6/drq85H7tj7crlVuJ1Om3FomE2tfuvK63vz4
        AdLa2t3EeeT8XDv/HmV8bU4mr0HuMd9NrjP/0iXV+YNk+66netczzrMs2iNl2V4eL1JbK7P2jrvbceW+
        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
        AAAAAGAyNu196YRDfwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAKr7whf8Pq7RxskDzup8AAAAASUVORK5CYII=
</value>
  </data>
</root>