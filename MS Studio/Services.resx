<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAABQ+9rH/D7NlcIHMgUmSAAAAAElFTkSuQmCC
</value>
  </data>
</root>